---

- name: VLAN COUNT ON Juniper JunOS and Cisco IOS switches
  hosts: l2device
  gather_facts: no
  vars:
    - result_dir: ./results/
    - compare: true
    - total_vlan_old: {}
  tasks:

  - name: read previous total VLAN infos
    include_vars: 
      file: "{{ result_dir }}{{ item }}.json"
      name: "{{ item }}_old"
    run_once: true
    loop: 
      - total_vlan
      - total_voice_vlan
    when: compare
    ignore_errors: true

  - name: remove local files
    file: 
      path: "{{ item }}"
      state: absent
    loop:
      - "{{ result_dir }}customer_vlan.json"
      - "{{ result_dir }}total_vlan.json"
      - "{{ result_dir }}total_voice_vlan.json"
      - "{{ result_dir }}customer_voice_vlan.json"
      - "{{ result_dir }}customer_vlan_diff.json"
      - "{{ result_dir }}customer_voice_vlan_diff.json"
    run_once: true

  - name: read lookup variables from file
    include_vars: 
      file: ./files/lookup.txt
      name: lookup
    run_once: true

  - name: gather interface facts for JunOS Devices
    junipernetworks.junos.junos_facts:
      gather_subset: min
      gather_network_resources: 
            - l2_interfaces
    register: _intf_facts
    vars:
      ansible_command_timeout: 60
    when: ansible_network_os == 'junos'

  - name: gather interface facts for Cisco IOS Devices
    cisco.ios.ios_facts:
      gather_subset: min
      gather_network_resources: 
            - l2_interfaces
    register: _intf_facts
    when: ansible_network_os == 'ios'
    become: true
  
  - name: FACTS output
    debug: 
      var: _intf_facts
      verbosity: 2

  - set_fact:
      _l2_interfaces: "{{ _intf_facts.ansible_facts.ansible_network_resources }}"
    
  - set_fact:  
      _vlan_ids: "{{ _l2_interfaces | json_query('l2_interfaces[*].access.vlan')  }}"
      _voice_vlan_ids:  "{{ _l2_interfaces | json_query('l2_interfaces[*].voice.vlan')  }}"
  
  - name: VLAN IDs
    debug:
      var: _vlan_ids
      verbosity: 2
  
  - name: VOICE VLAN IDs
    debug:
      var: _voice_vlan_ids
      verbosity: 2

  - name: generate total VLAN reports
    template: 
      src: "./templates/{{ item }}.j2"
      dest: "{{ result_dir }}{{ item }}.json"
    delegate_to: localhost
    run_once: true
    loop: 
      - total_vlan
      - total_voice_vlan
  
  - name: read total VLAN infos
    include_vars: 
      file: "{{ result_dir }}{{ item }}.json"
      name: "{{ item }}_result"
    run_once: true
    loop: 
      - total_vlan
      - total_voice_vlan

  - name: generate customer VLAN report
    template: 
      src: ./templates/customer_vlan.j2
      dest: "{{ result_dir }}customer_vlan.json"
    delegate_to: localhost
    run_once: true

  - name: generate customer VLAN report DIFF
    template: 
      src: ./templates/customer_vlan_diff.j2
      dest: "{{ result_dir }}customer_vlan_diff.json"
    delegate_to: localhost
    run_once: true
    when: compare
    ignore_errors: true

  - set_fact:
      total_vlan_result: "{{ total_voice_vlan_result }}"
      total_vlan_old: "{{ total_voice_vlan_old }}"
  
  - name: generate customer VOICE VLAN report
    template: 
      src: ./templates/customer_vlan.j2
      dest: "{{ result_dir }}customer_voice_vlan.json"
    delegate_to: localhost
    run_once: true
  
  - name: generate customer VOICE VLAN report DIFF
    template: 
      src: ./templates/customer_vlan_diff.j2
      dest: "{{ result_dir }}customer_voice_vlan_diff.json"
    delegate_to: localhost
    run_once: true
    when: compare
    ignore_errors: true
